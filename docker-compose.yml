version: '3.8'

services:
  # 后端服务
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      args:
        - DOCKER_BUILDKIT=1
        - COMPOSE_HTTP_TIMEOUT=200
    container_name: eart_local_ai_backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/ai_course_system
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WECHAT_APP_ID=${WECHAT_APP_ID}
      - WECHAT_APP_SECRET=${WECHAT_APP_SECRET}
      - TEAMS_APP_ID=${TEAMS_APP_ID}
      - TEAMS_APP_SECRET=${TEAMS_APP_SECRET}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=ai_course
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
    depends_on:
      - db
      - redis
      - milvus
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
      - ./data:/app/data
    restart: always

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - DOCKER_BUILDKIT=1
        - COMPOSE_HTTP_TIMEOUT=200
    container_name: eart_local_ai_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: always

  # 数据库服务
  db:
    image: postgres:13
    container_name: eart_local_ai_postgres
    environment:
      - POSTGRES_DB=ai_course
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

  # Redis服务
  redis:
    image: redis:6
    container_name: eart_local_ai_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always

  # Nginx服务
  nginx:
    image: nginx:alpine
    container_name: eart_local_ai_nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./frontend/dist:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    restart: always

  milvus:
    image: milvusdb/milvus:v2.2.3
    container_name: eart_local_ai_milvus
    restart: always
    environment:
      - ETCD_CFG.auto_compaction_mode=revision
      - ETCD_CFG.auto_compaction_retention=1000
      - COMMON_CFG.retention_duration=168h
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"

volumes:
  postgres_data:
  redis_data:
  milvus_data: 